$utilities: (
    "align": (
        property: vertical-align,
        class: align,
        values: baseline top middle bottom text-bottom text-top
    ),
    "float": (
        responsive: true,
        property: float,
        values: left right none
    ),
    "overflow": (
        property: overflow,
        values: auto hidden,
    ),
    "display": (
        responsive: true,
        print: true,
        property: display,
        class: d,
        values: none inline inline-block block table table-row table-cell flex inline-flex
    ),
    "shadow": (
        property: box-shadow,
        class: shadow,
        values: (
            null: 0 .5rem 1rem rgba(0, 0, 0, .15),
            sm: 0 .125rem .25rem rgba(0, 0, 0, .075),
            lg: 0 1rem 3rem rgba(0, 0, 0, .175),
            none: none,
        )
    ),
    "position": (
        property: position,
        values: static relative absolute fixed sticky
    ),
    "border": (
        property: border,
        values: (
            null: 2px solid $pro7,
            0: 0,
        )
    ),
    "border-top": (
        property: border-top,
        values: (
            null: 2px solid $pro7,
            0: 0,
        )
    ),
    "border-right": (
        property: border-right,
        values: (
            null: 2px solid $pro7,
            0: 0,
        )
    ),
    "border-bottom": (
        property: border-bottom,
        values: (
            null: 2px solid $pro7,
            0: 0,
        )
    ),
    "border-left": (
        property: border-left,
        values: (
            null: 2px solid $pro7,
            0: 0,
        )
    ),
    // Sizing utilities
    "width": (
        property: width,
        class: w,
        values: map-merge($spacers, (25: 25%, 50: 50%, 75: 75%, 100: 100%, auto: auto))
    ),
    "viewport-width": (
        property: width,
        class: vw,
        values: (100: 100vw)
    ),
    "max-width": (
        property: max-width,
        class: mw,
        values: map-merge($spacers, (100: 100%))
    ),
    "min-width": (
        property: min-width,
        class: min-w,
        values: map-merge($spacers, (100: 100%))
    ),
    "min-viewport-width": (
        property: min-width,
        class: min-vw,
        values: (100: 100vw)
    ),
    "height": (
        property: height,
        class: h,
        values: map-merge($spacers, (25: 25%, 50: 50%, 75: 75%, 100: 100%, auto: auto))
    ),
    "viewport-height": (
        property: height,
        class: vh,
        values: (100: 100vh)
    ),
    "max-height": (
        property: max-height,
        class: mh,
        values: map-merge($spacers, (100: 100%))
    ),
    "min-height": (
        property: min-height,
        class: min-h,
        values: map-merge($spacers, (100: 100%))
    ),
    "min-viewport-height": (
        property: min-height,
        class: min-vh,
        values: (100: 100vh)
    ),
    // Flex utilities
    "flex": (
        responsive: true,
        property: flex,
        values: (fill: 1 1 auto)
    ),
    "flex-direction": (
        responsive: true,
        property: flex-direction,
        class: flex,
        values: row column row-reverse column-reverse
    ),
    "flex-grow": (
        responsive: true,
        property: flex-grow,
        class: flex,
        values: (
            grow-0: 0,
            grow-1: 1,
        )
    ),
    "flex-shrink": (
        responsive: true,
        property: flex-shrink,
        class: flex,
        values: (
            shrink-0: 0,
            shrink-1: 1,
        )
    ),
    "flex-wrap": (
        responsive: true,
        property: flex-wrap,
        class: flex,
        values: wrap nowrap wrap-reverse
    ),
    "justify-content": (
        responsive: true,
        property: justify-content,
        values: (
            start: flex-start,
            end: flex-end,
            center: center,
            between: space-between,
            around: space-around,
            evenly: space-evenly,
        )
    ),
    "align-items": (
        responsive: true,
        property: align-items,
        values: (
            start: flex-start,
            end: flex-end,
            center: center,
            baseline: baseline,
            stretch: stretch,
        )
    ),
    "align-content": (
        responsive: true,
        property: align-content,
        values: (
            start: flex-start,
            end: flex-end,
            center: center,
            between: space-between,
            around: space-around,
            stretch: stretch,
        )
    ),
    "align-self": (
        responsive: true,
        property: align-self,
        values: (
            auto: auto,
            start: flex-start,
            end: flex-end,
            center: center,
            baseline: baseline,
            stretch: stretch,
        )
    ),
    "order": (
        responsive: true,
        property: order,
        values: (
            first: -1,
            0: 0,
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 5,
            last: 6,
        ),
    ),
    // Margin utilities
    "margin": (
        responsive: true,
        property: margin,
        class: m,
        values: map-merge($spacers, (auto: auto))
    ),
    "margin-x": (
        responsive: true,
        property: margin-right margin-left,
        class: mx,
        values: map-merge($spacers, (auto: auto))
    ),
    "margin-y": (
        responsive: true,
        property: margin-top margin-bottom,
        class: my,
        values: map-merge($spacers, (auto: auto))
    ),
    "margin-top": (
        responsive: true,
        property: margin-top,
        class: mt,
        values: map-merge($spacers, (auto: auto))
    ),
    "margin-right": (
        responsive: true,
        property: margin-right,
        class: mr,
        values: map-merge($spacers, (auto: auto))
    ),
    "margin-bottom": (
        responsive: true,
        property: margin-bottom,
        class: mb,
        values: map-merge($spacers, (auto: auto))
    ),
    "margin-left": (
        responsive: true,
        property: margin-left,
        class: ml,
        values: map-merge($spacers, (auto: auto))
    ),
    // Negative margin utilities
    "negative-margin": (
        responsive: true,
        property: margin,
        class: m,
        values: $negative-spacers
    ),
    "negative-margin-x": (
        responsive: true,
        property: margin-right margin-left,
        class: mx,
        values: $negative-spacers
    ),
    "negative-margin-y": (
        responsive: true,
        property: margin-top margin-bottom,
        class: my,
        values: $negative-spacers
    ),
    "negative-margin-top": (
        responsive: true,
        property: margin-top,
        class: mt,
        values: $negative-spacers
    ),
    "negative-margin-right": (
        responsive: true,
        property: margin-right,
        class: mr,
        values: $negative-spacers
    ),
    "negative-margin-bottom": (
        responsive: true,
        property: margin-bottom,
        class: mb,
        values: $negative-spacers
    ),
    "negative-margin-left": (
        responsive: true,
        property: margin-left,
        class: ml,
        values: $negative-spacers
    ),
    // Padding utilities
    "padding": (
        responsive: true,
        property: padding,
        class: p,
        values: $spacers
    ),
    "padding-x": (
        responsive: true,
        property: padding-right padding-left,
        class: px,
        values: $spacers
    ),
    "padding-y": (
        responsive: true,
        property: padding-top padding-bottom,
        class: py,
        values: $spacers
    ),
    "padding-top": (
        responsive: true,
        property: padding-top,
        class: pt,
        values: $spacers
    ),
    "padding-right": (
        responsive: true,
        property: padding-right,
        class: pr,
        values: $spacers
    ),
    "padding-bottom": (
        responsive: true,
        property: padding-bottom,
        class: pb,
        values: $spacers
    ),
    "padding-left": (
        responsive: true,
        property: padding-left,
        class: pl,
        values: $spacers
    ),
    // Text
    "font-weight": (
        property: font-weight,
        values: (
            thin: 100,
            light: 300,
            regular: 400,
            medium: 500,
            bold: 700,
            black: 900
        )
    ),
    "font-size": (
        responsive: true,
        property: font-size,
        values: (
            1: .625rem,
            2: .75rem,
            3: 1rem,
            4: 1.25rem,
            5: 1.5rem,
            6: 2rem,
            7: 3rem,
            8: 4rem
        )
    ),
    "text-transform": (
        property: text-transform,
        class: text,
        values: lowercase uppercase capitalize
    ),
    "text-align": (
        responsive: true,
        property: text-align,
        class: text,
        values: left right center
    ),
    "line-height": (
        property: line-height,
        class: lh,
        values: (
            1: 1,
            small: 1.25,
            base: 1.5,
            large: 2,
        )
    ),
    "white-space": (
        property: white-space,
        class: text,
        values: (
            wrap: normal,
            nowrap: nowrap,
        )
    ),
    "text-decoration": (
        property: text-decoration,
        values: none underline line-through
    ),
    "font-style": (
        property: font-style,
        class: font,
        values: italic normal
    ),
    "word-wrap": (
        property: word-wrap word-break,
        class: text,
        values: (break: break-word)
    ),
    "font-family": (
        property: font-family,
        class: font,
        values: (monospace: monospace)
    ),
    "user-select": (
        property: user-select,
        values: all auto none
    ),
    "pointer-events": (
        property: pointer-events,
        class: pe,
        values: none auto,
    ),
    "rounded": (
        property: border-radius,
        class: rounded,
        values: (
            null: .25rem,
            small: .2rem,
            large: .3rem,
            circle: 50%,
            pill: 50rem,
            0: 0,
        )
    ),
    "rounded-top": (
        property: border-top-left-radius border-top-right-radius,
        class: rounded-top,
        values: (null: .25rem)
    ),
    "rounded-right": (
        property: border-top-right-radius border-bottom-right-radius,
        class: rounded-right,
        values: (null: .25rem)
    ),
    "rounded-bottom": (
        property: border-bottom-right-radius border-bottom-left-radius,
        class: rounded-bottom,
        values: (null: .25rem)
    ),
    "rounded-left": (
        property: border-bottom-left-radius border-top-left-radius,
        class: rounded-left,
        values: (null: .25rem)
    ),
    "visibility": (
        property: visibility,
        class: null,
        values: (
            visible: visible,
            invisible: hidden,
        )
    )
);

.bg-1 {
    background-color: $pro10;
    .dark & {
        background-color: $pro0;
    }
}

.bg-2 {
    background-color: darken($pro10, 1%);
    .dark & {
        background-color: darken($pro0, .5%);
    }
}

.bg-3 {
    background-color: darken($pro10, 2%);
    .dark & {
        background-color: darken($pro0, 1%);
    }
}

.bg-4 {
    background-color: darken($pro10, 3%);
    .dark & {
        background-color: darken($pro0, 1.5%);
    }
}

.bg-5 {
    background-color: $pro9;
    .dark & {
        background-color: $pro1;
    }
}

.bg-6 {
    background-color: $pro8;
    .dark & {
        background-color: $pro2;
    }
}

.bg-transparent {
    background-color: transparent;
    .dark & {
        background-color: transparent;
    }
}

.fill-1 {
    fill: $pro5;
    .dark & {
        fill: $pro5;
    }
}

.fill-2 {
    fill: $pro4;
    .dark & {
        fill: $pro6;
    }
}

.fill-3 {
    fill: $pro3;
    .dark & {
        fill: $pro7;
    }
}

.fill-4 {
    fill: $pro2;
    .dark & {
        fill: $pro8;
    }
}

.clearfix {
    @include clearfix();
}

.fixed-top {
    position: fixed !important;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1030;
}

.fixed-bottom {
    position: fixed !important;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1030;
}

// Responsive sticky top
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
        .sticky#{$infix} {
            position: sticky;
            top: 75px;
            z-index: 1020;
        }
    }
}

.sr-only,
.sr-only-focusable:not(:focus) {
    @include sr-only();
}

.border,
.border-top,
.border-right,
.border-bottom,
.border-left {
    border-color: $pro7 !important;
    .dark & {
        border-color: $pro3 !important;
    }
}

.text-muted {
    color: $pro6;
    .dark & {
        color: $pro4;
    }
}

.text-light-bg {
    color: $pro4 !important;
}

.text-dark-bg {
    color: $pro6 !important;
}

.text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.stretched-link {
    &::after {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
        content: "";
    }
}
  
.ratio {
    position: relative;
    width: 100%;
    &::before {
        display: block;
        padding-top: var(--aspect-ratio);
        content: "";
    }
    > * {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}
  
@each $key, $ratio in $aspect-ratios {
    .ratio-#{$key} {
        --aspect-ratio: #{$ratio};
    }
}
